<% require "dotenv"; Dotenv.load(".env.production") %>

# Name of your application. Used to uniquely configure containers.
service: cortex

# Name of the container image.
image: webbesoft/cortex

# Deploy to these servers.
servers:
  web:
    - 130.162.214.17
  cron:
    hosts:
      - 130.162.214.17
    cmd: php artisan schedule:work
    options:
      health-cmd: healthcheck-schedule
  # job:
  #   hosts:
  #     - 192.168.0.1
  #   cmd: bin/jobs

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  host: cortex.webbe.dev
  # Proxy connects to your container on port 80 by default.
  app_port: 8080
  forward_headers: true

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  server: ghcr.io
  username: webbesoft

  # Always use an access token rather than real password (pulled from .kamal/secrets).
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch: amd64
  # Pass in additional build args needed for your Dockerfile.
  # args:
  #   RUBY_VERSION: <%= ENV["RBENV_VERSION"] || ENV["rvm_ruby_string"] || "#{RUBY_ENGINE}-#{RUBY_ENGINE_VERSION}" %>

# Inject ENV variables into containers (secrets come from .kamal/secrets).
#
env:
  clear:
    APP_NAME: 'Cortex'
    APP_DEBUG: 'false'
    FILESYSTEM_DISK: 's3'
    DB_HOST: 'cortex-db'
    DB_CONNECTION: 'sqlite'
    APP_FAKER_LOCALE: 'en_US'
    APP_FALLBACK_LOCALE: 'en'
    BCRYPT_ROUNDS: '12'
    BROADCAST_CONNECTION: 'log'
    CACHE_STORE: 'database'
    LOG_CHANNEL: 'errorlog'
    LOG_DEPRECATION_CHANNEL: 'null'
    LOG_LEVEL: 'debug'
    LOG_STACK: 'daily'
  secret:
    - APP_KEY
    - APP_DOMAIN
    - APP_HOST
    - APP_LOCALE
    - APP_MAINTENANCE_DRIVER
    - APP_URL_BULK_BUY
    - ASSET_URL
    - AWS_ACCESS_KEY_ID
    - AWS_BUCKET
    - AWS_DEFAULT_REGION
    - AWS_ENDPOINT
    - AWS_SECRET_ACCESS_KEY
    - AWS_URL
    - AWS_USE_PATH_STYLE_ENDPOINT
    - BASIC_MONTHLY_ID
    - BASIC_YEARLY_ID
    - DB_CONNECTION
    - DB_DATABASE
    - DB_PASSWORD
    - DB_PORT
    - DB_URL
    - DB_USERNAME
    - FILAMENT_FILESYSTEM_DISK
    - LOG_DEPRECATIONS_CHANNEL
    - MAIL_FROM_ADDRESS
    - MAIL_FROM_NAME
    - MAIL_HOST
    - MAIL_MAILER
    - MAIL_PASSWORD
    - MAIL_PORT
    - MAIL_SCHEME
    - MAIL_USERNAME
    - MAILGUN_DOMAIN
    - MAILGUN_ENDPOINT
    - MAILGUN_SECRET
    - MEMCACHED_HOST
    - MYSQL_ROOT_PASSWORD
    - PHP_CLI_SERVER_WORKERS
    - QUEUE_CONNECTION
    - REDIS_CLIENT
    - REDIS_HOST
    - REDIS_PASSWORD
    - REDIS_PORT
    - SENTRY_DSN
    - SENTRY_LARAVEL_DSN
    - SENTRY_TRACES_SAMPLE_RATE
    - SERVER_PORT
    - SESSION_DOMAIN
    - SESSION_DRIVER
    - SESSION_ENCRYPT
    - SESSION_LIFETIME
    - SESSION_PATH
    - SHELL_VERBOSITY
    # - STRIPE_KEY
    # - STRIPE_SECRET
    # - STRIPE_WEBHOOK_SECRET
    - VITE_APP_NAME
    - VITE_APP_URL
    - VITE_ASSET_URL

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal app logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# Use a different ssh user than root
#
ssh:
  user: ubuntu
  keys: [ <%= ENV["SSH_KEY_LOCATION"] %> ]

# Use a persistent storage volume.
#
volumes:
  - "cortex/database.sqlite:/var/www/html/database/database.sqlite"
#   - "app_storage:/app/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
asset_path: /var/www/html/public/build

# Configure rolling deploys by setting a wait time between batches of restarts.
#
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Use accessory services (secrets come from .kamal/secrets).
#
# accessories:
  # db:
  #   image: mariadb:12-noble
  #   host: cortex.webbe.dev
  #   port: "3306:3306"
  #   env:
  #     clear:
  #       MARIADB_ROOT_HOST: '%'
  #     secret:
  #       - MARIADB_ROOT_PASSWORD:MYSQL_ROOT_PASSWORD
  #       - MARIADB_USER:DB_USERNAME
  #       - MARIADB_PASSWORD:DB_PASSWORD
  #       - MARIADB_DATABASE:DB_DATABASE
  #   directories:
  #     - data:/var/lib/mysql:Z
  # redis:
  #   image: valkey/valkey:8
  #   host: 192.168.0.2
  #   port: 6379
  #   directories:
  #     - data:/data
